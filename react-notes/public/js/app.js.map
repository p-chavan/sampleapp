{"version":3,"sources":["app/actions/base.js","app/actions/notes/all.js","app/components/notes/ErrorNotice.jsx","app/components/notes/list/index.jsx","app/components/notes/list/item.jsx","app/components/notes/modal.jsx","app/config.js","app/constants/components.js","app/constants/index.js","app/constants/notes.js","app/dispatcher.js","app/emitter.js","app/initialize.jsx","app/pages/notes/index.jsx","app/pages/notes/singleNote.jsx","app/stores/base.js","app/stores/index.js","app/stores/notes.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArzEA;AAAA;ACAA;AAAA;AACA;AACA;AAFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;ACAA;AAAA;AACA;AACA;AAFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtxGA;AAAA;ACAA;AAAA;AACA;AACA;AAFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA","file":"public/js/app.js","sourcesContent":["module.exports = function(constants) {\n\tthis.all = function(content) {\n\t\treturn {\n\t\t\ttype: constants.ALL,\n\t\t\tcontent: content\n\t\t};\n\t};\n\t\n\tthis.create = function(content) {\n\t\treturn {\n\t\t\ttype: constants.CREATE,\n\t\t\tcontent: content\n\t\t};\n\t};\n\t\n\tthis.update = function(content) {\n\t\treturn {\n\t\t\ttype: constants.UPDATE,\n\t\t\tcontent: content\n\t\t};\n\t};\n\t\n\tthis.remove = function(content) {\n\t\treturn {\n\t\t\ttype: constants.REMOVE,\n\t\t\tcontent: content\n\t\t};\n\t};\n\n\tthis.read = function(content) {\n\t\treturn {\n\t\t\ttype: constants.READ,\n\t\t\tcontent: content\n\t\t};\n\t};\n\t\n\n};","\"use strict\";\n\nvar constants = require(\"constants\");\n\nmodule.exports = {\n      \n};","var React = require('react');\n\nvar ErrorNotice = React.createClass({displayName: 'ErrorNotice',\n  render: function() {\n    return (\n      React.createElement(\"div\", {className: \"error-notice\"}, \n        \"Error processing request.\"\n      )\n      );\n  }\n});\n\nmodule.exports = ErrorNotice;","/* jshint node: true */\n\"use strict\";\n\nvar _ = require(\"underscore\"),\n    Item = require(\"./item\");\n\n\nmodule.exports = React.createClass({displayName: 'exports',\n   \n    renderItems: function() {\n        return this.props.notes.map(function(note) {\n           return React.createElement(Item, {key: note.id, note: note});\n        });\n        \n    },\n\n    render: function() {\n        return React.createElement(\"ul\", {className: \"list-group\"}, \n            this.renderItems()\n        );\n    } \n});","/* jshint node: true */\n\"use strict\";\n\nvar constants = require(\"constants\").notes,\n    dispatcher = require(\"dispatcher\");\n\n\n\nmodule.exports = React.createClass({displayName: 'exports',\n\t\n\tgetInitialState: function() {\n        return { shouldHide: false };\n    },\n    toggle: function() {\n        this.props.note.isComplete = !this.props.note.isComplete;\n        dispatcher.dispatch({ type: constants.remove, content: this.props.note });\n    },\n\n    editContent: function() {\n \t\tthis.state.saveTxt = this.props.note.name;\n    \tthis.setState({ shouldHide: true });\n    },\n    saveContent: function() {\n    \tthis.props.note.name = this.refs.inputText.getDOMNode().value || this.state.saveTxt;\n    \tthis.setState({ shouldHide: false });\n    \tdispatcher.dispatch({ type: constants.update, content: this.props.note });\n    },\n    handleInput: function(evt) {\n        if (evt.keyCode == 13 ) {\n             return this.saveContent();\n        }\n    },\n    \n    render: function() {\n        var hash = '#/notes/' + this.props.note.id;\n\n        return React.createElement(\"li\", {className: \"list-group-item pointer\"}, \n        React.createElement(\"span\", {onClick: this.editContent, className: this.state.shouldHide ? 'hidden' : ''}, this.props.note.name), \n        React.createElement(\"input\", {type: \"text\", className: this.state.shouldHide ? '' : 'hidden', ref: \"inputText\", onKeyDown: this.handleInput}), \n        React.createElement(\"span\", {className: \"pd10\"}, React.createElement(\"a\", {href: hash, className: this.state.shouldHide ? 'hidden' : ''}, \"View\")), \n        React.createElement(\"span\", null, React.createElement(\"a\", {href: \"#\", className: this.state.shouldHide ? 'hidden' : '', onClick: this.toggle}, \"Delete\"))\n        ); \n    } \n});","\"use strict\";\n\nvar React = require(\"react\"),\n    \n    dispatcher = require(\"dispatcher\"),\n    emitter = require(\"emitter\"),\n    constants = require(\"constants\").notes;\n\nmodule.exports = React.createClass({displayName: 'exports',\n    getInitialState: function() {\n        return {\n            visible: false,\n            value: \"\"\n        };\n    },\n    \n    componentDidMount: function () {\n        this.$el = $(this.getDOMNode());\n        this.$el.on(\"hidden.bs.modal\", this.reset);\n        \n        emitter.on(constants.changed, function() {\n            this.$el.modal(\"hide\");\n        }.bind(this));       \n\n    },\n    \n    componentWillUnmount: function() {\n        emitter.off(constants.changed);\n    },\n\n    show: function () {\n        this.$el.modal(\"show\");\n    },\n\n    reset: function() {\n        this.setState({ value: \"\" });\n    },\n    \n    save: function() {\n        dispatcher.dispatch({ type: constants.create, content: { name: this.state.value, isComplete: false }});\n    },\n    \n    onChange: function(e) {\n        this.setState({ value: e.target.value });\n    },\n    \n    render: function() {\n\t\treturn React.createElement(\"div\", {className: \"modal fade\", tabIndex: \"-1\", role: \"dialog\", 'aria-hidden': \"true\"}, \n    \n            React.createElement(\"div\", {className: \"modal-dialog modal-sm\"}, \n                React.createElement(\"div\", {className: \"modal-content\"}, \n                    React.createElement(\"div\", {className: \"modal-header\"}, \n                        React.createElement(\"button\", {type: \"button\", className: \"close\", 'data-dismiss': \"modal\"}, \n                            React.createElement(\"span\", {'aria-hidden': \"true\"}, \"Ã—\"), \n                            React.createElement(\"span\", {className: \"sr-only\"}, \"Close\")\n                        ), \n                        React.createElement(\"h3\", {className: \"modal-title\"}, \"New Note\")\n                    ), \n                    React.createElement(\"div\", {className: \"modal-body\"}, \n                        React.createElement(\"input\", {placeholder: \"Note name...\", type: \"text\", value: this.state.value, onChange: this.onChange})\n                    ), \n                    React.createElement(\"div\", {className: \"modal-footer\"}, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"row\"}, \n\t\t\t\t\t\t\tReact.createElement(\"div\", {className: \"col col-md-12\"}, \n\t\t\t\t\t\t\t\tReact.createElement(\"button\", {type: \"button\", className: \"btn btn-primary pull-right\", onClick: this.save}, \"Save\"), \n                                React.createElement(\"button\", {type: \"button\", className: \"btn btn-default pull-right spacing-right\", onClick: this.reset, 'data-dismiss': \"modal\"}, \"Close\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n                    )\n                )\n            )\n        );\n    }\n});","module.exports = {\n\tfixtures: true\n};","\"use strict\";\n\nmodule.exports = {\n    notes: \"notes-component\"\n};","\"use strict\";\n\nmodule.exports = {\n    components: require(\"./components\"),\n    notes: require(\"./notes\")\n};","module.exports = {\n    changed: \"notes-changed\",\n    error: \"error\",\n    \n    all: \"all-notes\",\n    create: \"create-notes\",\n    update: \"update-notes\",\n    remove: \"remove-notes\",\n    read: \"read-notes\",\n\n    api: \"/api/notes/\"\n};","/* jshint node: true */\n\"use strict\";\n\nvar Dispatcher = require(\"flux\").Dispatcher;\n\nmodule.exports = new Dispatcher();","var EventEmitter = require(\"eventEmitter\");\n\nmodule.exports = new EventEmitter();","/* jshint node: true */\n\"use strict\";\n\nrequire(\"stores\");\n\nvar React = require(\"react\");\nvar ReactRouter = require(\"react-router\");\n\nvar $__0=      ReactRouter,Route=$__0.Route,RouteHandler=$__0.RouteHandler,Link=$__0.Link;\nvar DefaultRoute = ReactRouter.DefaultRoute;\n\nvar App = React.createClass({displayName: 'App',\n\trender: function () {\n\t\treturn (\n     \t\t React.createElement(RouteHandler, null)\n   \t\t );\n\t}\n});\n\nvar Notes = require(\"pages/notes/index\");\n\n\nvar Note = require(\"pages/notes/singleNote\");\n\nvar routes = (\t\n  React.createElement(Route, {handler: App, path: \"/\"}, \n      React.createElement(DefaultRoute, {handler: Notes}), \n    React.createElement(Route, {name: \"note\", path: \"/notes/:noteID\", handler: Note})\n  )\n);\n\nReactRouter.run(routes,function (Handler) {\n  React.render(React.createElement(Handler, null), document.getElementById('app'));\n});","/* jshint node: true */\n\"use strict\";\n\nvar React = require(\"react\"),\n    _ = require(\"underscore\"),\n    \n    List = require(\"../../components/notes/list\"),\n    Modal = require(\"../../components/notes/modal\"),\n    ErrorNotice = require(\"../../components/notes/ErrorNotice\"),\n    dispatcher = require(\"dispatcher\"),\n    emitter = require(\"emitter\"),\n    constants = require(\"constants\").notes;\n   \nmodule.exports = React.createClass({displayName: 'exports',\n    getInitialState: function() {\n        return {\n            notes: [],\n            isError :false\n        }  \n    },\n\n    componentWillMount: function() {\n        emitter.on(constants.changed, function(notes) {\n            if(this.isMounted())\n                 this.setState({ notes: notes });\n        }.bind(this));\n        emitter.on(constants.error, function(notes) {\n            if(this.isMounted())\n                this.setState({ isError: true });\n        }.bind(this));\n\n    },\n    \n    componentDidMount: function() {\n        dispatcher.dispatch({ type: constants.all });\n    },\n    \n    componentsWillUnmount: function() {\n        emitter.off(constants.all);\n    },\n    \n    create: function() {\n        this.refs.create.show();\n    },\n    \n    renderList: function(complete) {\n        return React.createElement(List, {notes: _.filter(this.state.notes, function(x) { return x.isComplete === complete; })});\n    },\n    \n    render: function() {\n        var errors = (this.state.isError) ? React.createElement(ErrorNotice, null) : React.createElement(\"div\", null);\n        return React.createElement(\"div\", {className: \"container\"}, \n            errors, \n            React.createElement(\"div\", {className: \"row\"}, \n                React.createElement(\"div\", {className: \"col-md-8\"}, \n                    React.createElement(\"h2\", null, \"Note List\")\n                ), \n                React.createElement(\"div\", {className: \"col-md-4\"}, \n                    React.createElement(\"button\", {type: \"button\", className: \"btn btn-primary pull-right spacing-top\", onClick: this.create}, \"New Note\")\n                )\n            ), \n                    \n            React.createElement(\"div\", {className: \"row\"}, \n                React.createElement(\"div\", {className: \"col-md-8\"}, \n                    React.createElement(\"h4\", {className: \"spacing-bottom\"}, \"Below is the list of incomplete notes.\"), \n                    this.renderList(false)\n                )\n            ), \n            \n            React.createElement(Modal, {ref: \"create\"})\n            \n        );\n    }\n});","/* jshint node: true */\n\"use strict\";\n\nvar React = require(\"react\"),\n    _ = require(\"underscore\"),\n    \n    dispatcher = require(\"dispatcher\"),\n    emitter = require(\"emitter\"),\n    constants = require(\"constants\").notes;\n  \n   \nmodule.exports = React.createClass({displayName: 'exports',\n\n  contextTypes: {\n    router: React.PropTypes.func\n  },\n\n  getInitialState: function() {\n  \n        dispatcher.dispatch({ type: constants.read, content: this.context.router.getCurrentParams().noteID });\n        return {\n            note: \"\",\n            isError: false\n        }  \n    },\n\n  componentDidMount: function() {\n        \n        emitter.on(constants.changed, function(note) {\n        \tthis.updateNote(note);\n        }.bind(this));\n        emitter.on(constants.error, function(notes) {\n            if(this.isMounted())\n                this.setState({ isError: true });\n        }.bind(this));\n    },\n\n    \n  componentsWillUnmount: function() {\n        \n        emitter.off(constants.read);\n    },\n  componentWillReceiveProps: function(nextProps) {\n      if(this.isMounted())\n        this.setState(this.getInitialState(nextProps));\n    },\n  \n  renderContent: function() {\n         return  ( React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Note id: \", this.state.note.id), \n          React.createElement(\"div\", null, \"Note:- \", this.state.note.name)) );\n    },\n\n  updateNote: function(note){\n        if(!this.isMounted()){\n           return; \n        }\n       this.setState({ note: note });\n    },\n\n  render: function () {\n    var $__0=    this.context,router=$__0.router;\n    var errors = (this.state.isError) ? React.createElement(ErrorNotice, null) : React.createElement(\"div\", null);\n\t  \n    return (\n      React.createElement(\"div\", {className: \"Notes\"}, \n       errors, \n       React.createElement(\"div\", null, this.renderContent())\n      )\n    );\n  }\n});","\"use strict\";\n\nvar _ = require(\"underscore\"),\n    emitter = require(\"emitter\"),\n    dispatcher = require(\"dispatcher\"),\n    constants = require(\"constants\");\n\nmodule.exports = function(url, constants) {\n    this._url = url;\n    this._collection = [];\n    \n    $.get(this._url).then(function(data) {\n        this._collection = data;\n        _notify.call(this);\n    }.bind(this));\n    \n    dispatcher.register(function(payload) {\n        switch (payload.type) {\n            case constants.all:\n                this._all();\n                break;\n                \n            case constants.update:\n                this._update(payload.content);\n                break;\n                \n            case constants.create:\n                this._create(payload.content);\n                break\n\n            case constants.remove:\n                this._remove(payload.content);\n                break; \n\n            case constants.read:\n                this._read(payload.content);\n                break;        \n            }\n    }.bind(this));\n    \n    this._all = function() {\n        _notify.call(this);\n    };\n    \n    this._update = function(content) {\n       \n        _ajaxCall(content,constants.api+content.id,'POST').done(function(result) {\n             this._collection = result;\n             _notify.call(this);\n\n        }).fail(function() {\n            _notifyError.call(this);\n        });\n    };\n    \n    this._create = function(content) {\n        content.id = _.max(this._collection, function(x) { return x.id; }).id + 1;\n        _ajaxCall(content,constants.api,'POST').done(function(result) {\n             this._collection = result;\n             _notify.call(this);\n           \n        }).fail(function() {\n            _notifyError.call(this);\n        });\n    };\n\n\n    this._remove = function(content) {\n        \n       _ajaxCall('',constants.api+content.id,'DELETE').done(function(result) {\n             this._collection = result;\n             _notify.call(this);\n\n        }).fail(function() {\n            _notifyError.call(this);\n        });\n    };\n\n    this._read = function(content) {\n\n       _ajaxCall('',constants.api+content,'GET').done(function(result) {\n             this._collection = result;\n             _notify.call(this);\n\n        }).fail(function() {\n            _notifyError.call(this);\n        });\n        \n    };\n\n    function _ajaxCall(content,url,type){\n        return $.ajax({\n            url:  url,\n            type: type,\n            data: content       \n        });\n    }\n   \n    function _notify() {\n        emitter.emit(constants.changed, this._collection);\n    }\n    function _notifyError() {\n        emitter.emit(constants.error,\"\");\n    }\n};","module.exports = {\n    notes: require(\"stores/notes\")\n};","var Base = require(\"./base\"),\n    constants = require(\"constants\").notes;\n\nmodule.exports = new Base(constants.api, constants);"]}